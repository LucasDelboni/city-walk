{"version":3,"sources":["Player.js","App.js","serviceWorker.js","index.js"],"names":["panel","width","maxWidth","position","padding","left","background","color","backgroundColor","zIndex","opacity","top","eyeIcon","h1","textAlign","fontSize","fontFamily","margin","cityBox","bottom","height","borderRadius","overflowY","citySelectorStyle","border","fontWeight","Player","props","citySelector","useState","selectedCountry","setCountry","playerActive","setPlayerActive","onMouseOver","event","el","target","style","onMouseOut","countrySelector","allCities","map","country","key","onClick","onMouseEnter","find","cities","city","videoId","changeVideo","name","icon","faEye","href","source","rel","faPizzaSlice","action","method","type","value","src","title","alt","videoStyle","section","display","alignItems","justifyContent","videoContainer","App","customCommand","randomElement","Math","floor","random","length","currentCity","videoSource","frameBorder","allowFullScreen","allow","disablekb","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47583f61.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPizzaSlice, faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nconst panel = {\n  width: '20%',\n  maxWidth: '400px',\n  position: 'absolute',\n  padding: '10px 26px 3px',\n  left: 0,\n  background: 'rgba(33,33,33,.5)',\n  color: '#fff',\n  backgroundColor: 'black',\n  zIndex: 1,\n  opacity: 0.5,\n  top: 0\n}\n\nconst eyeIcon = {\n  position: 'absolute',\n  left: 0,\n  zIndex: 2,\n  opacity: 0.5,\n  top: 0,\n  color: 'white'\n}\n\nconst h1 = {\n  textAlign: 'center',\n  fontSize: '2rem',\n  fontFamily: \"Cookie\",\n  padding: '20px',\n  margin: '15px',\n  zIndex: 1,\n  opacity: 0.7\n}\n\nconst cityBox = {\n  padding: '1% 2%',\n  left: 0,\n  bottom: 0,\n  height: '170px',\n  background: 'rgba(33,33,33,.6)',\n  borderRadius: '3px',\n  overflowY: 'auto',\n}\n\nconst citySelectorStyle = {\n  background: cityBox.background,\n  width: '100%',\n  color: 'white',\n  border: 0,\n  textAlign: 'initial',\n  fontWeight: 400,\n  fontSize: '14px',\n};\n\n\nfunction Player(props) {\n  const [selectedCountry, setCountry] = useState('');\n  const [playerActive, setPlayerActive] = useState(true);\n\n  const onMouseOver = event => {\n    const el = event.target;\n    el.style.fontWeight = 700;\n    el.style.fontSize = '14px';\n  };\n\n  const onMouseOut = event => {\n    const el = event.target;\n    el.style.fontWeight = 400;\n    el.style.fontSize = '14px';\n  };\n\n  const countrySelector = props.allCities.map((country) => (\n    <button \n      key={country.country}\n      style={citySelectorStyle} \n      onClick={() => setCountry(country.country)}\n      onMouseEnter={event => onMouseOver(event)}\n      onMouseOut={event => onMouseOut(event)}>\n      {country.country}\n    </button>\n  ));\n\n  let citySelector;\n  if(selectedCountry !== ''){\n    citySelector = props.allCities.find((country) => country.country === selectedCountry).cities.map((city) => (\n      <button \n        key={city.videoId}\n        style={citySelectorStyle} \n        onClick={() => props.changeVideo(city)}\n        onMouseEnter={event => onMouseOver(event)}\n        onMouseOut={event => onMouseOut(event)}>\n        {city.name}\n      </button>\n    ));\n\n  }\n\n  const onIconClick = () => {\n    setPlayerActive(!playerActive);\n  }\n\n  return (\n    <div>\n      <FontAwesomeIcon icon={faEye} style={eyeIcon} onClick={onIconClick}/>\n      {playerActive && (\n        <div style={panel}>\n          <h1 style={h1}>City Walk</h1>\n          <p>Aperte F11 para uma melhor experiência!</p>\n          <label>Escolha uma país para caminhar</label>\n          <div style={cityBox}>\n            {countrySelector}\n          </div>\n          {selectedCountry !== '' && (\n            <div>\n              <label>Escolha uma cidade para caminhar</label>\n              {citySelector}\n            </div>\n          )}\n          <a href={props.source} target=\"_blank\" rel=\"noopener noreferrer\">Fonte</a>\n          <p>Me ajude a comprar pizza <FontAwesomeIcon icon={faPizzaSlice}/></p>\n          <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\n            <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n            <input type=\"hidden\" name=\"hosted_button_id\" value=\"LTM5QNLL4WA52\" />\n            <input type=\"image\" src=\"https://www.paypalobjects.com/pt_BR/BR/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Faça doações com o botão do PayPal\" />\n            <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/pt_BR/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Player;\n","import React, { useState } from 'react';\nimport Player from './Player';\nimport $ from 'jquery';\n\nconst videoStyle= {\n  width: \"100%\", \n  height: \"100%\",\n  // pointerEvents: 'none',\n  position: 'absolute'\n};\n\nconst section = {\n  position: 'relative',\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}\n\nconst videoContainer = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n}\n\nfunction App() {\n  const allCities = [\n    {country: 'Brasil', cities: [\n      {name: 'Curitiba - Paraná', videoId: '1w5eAshOono'},\n      {name: 'São Paulo (Av Paulista) - São Paulo', videoId: 'UFP3YLjaCXk', customCommand: '&start=23'},\n      {name: 'São Paulo (Ibirapuera) - São Paulo', videoId: 'FJaE8lg_l7w', customCommand: '&start=10'},\n      {name: 'São Paulo (Oscar Freire) - São Paulo', videoId: 'yPSVCVFgZng', customCommand: '&start=10'},\n      {name: 'São Paulo (Itaim BIbi) - São Paulo', videoId: 'zQQZsmdVouE', customCommand: '&start=10'},\n      {name: 'Aparecida - São Paulo', videoId: 'UkiVENO6btk', customCommand: '&start=8'},\n      {name: 'Rio de Janeiro - Rio de Janeiro', videoId: 'zOVFrYL3F8o', customCommand: '&start=23'},\n      {name: 'Paraty - Rio de Janeiro', videoId: '712S2ureJG4', customCommand: '&start=10'},\n      {name: 'Gramado - Rio Grande do Sul', videoId: '56zbMbin1h4', customCommand: '&start=10'}\n    ]},\n    {country: 'Mexico', cities: [\n      {name: 'Cidade do Mexico', videoId: 'ER_szwLxHYk', customCommand: '&start=19'},\n    ]},\n    {country: 'Uruguai', cities: [\n      {name: 'Punta del Este', videoId: 'hjSc_zaO6CY', customCommand: '&start=20'},\n    ]},\n    {country: 'Argentina', cities: [\n      {name: 'Buenos Aires', videoId: 'oTaxO9HnEL0', customCommand: '&start=14'},\n    ]},\n  ];\n\n  const randomElement = allCities[0].cities[Math.floor(Math.random() * allCities[0].cities.length)];\n  const [currentCity, changeVideo] = useState(randomElement);\n\n  const videoSource = `https://www.youtube.com/embed/${currentCity.videoId}?\n    loop=1&&autoplay=1&playsinline=1&rel=0&showinfo=0&enablejsapi=1&widgetid=1&modestbranding=1&controls=0&disablekb=1&fs=0\n    &iv_load_policy=3&hd=1&mute=1${currentCity.customCommand}`;\n  const source = `https://www.youtube.com/watch?v=${currentCity.videoId}`;\n\n  return (\n    <div>\n      <div style={section}>\n        <Player allCities={allCities} changeVideo={changeVideo} source={source}/>\n        <div style={videoContainer}>\n          <iframe frameBorder=\"0\" allowFullScreen=\"1\" allow=\"autoplay; fullscreen\"\n            style={videoStyle} src={videoSource} disablekb=\"1\" title=\"video\">\n          </iframe>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}